{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TopNav = _resolveComponent(\"TopNav\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_TopNav, {\n    cartItemCount: $options.cartItemCount\n  }, null, 8 /* PROPS */, [\"cartItemCount\"]), _createVNode(_component_router_view, {\n    products: $data.products,\n    cartItems: $data.cartItems,\n    onAddToCart: $options.addToCart,\n    onRemoveFromCart: $options.removeFromCart,\n    onSubmitOrder: $options.submitOrder\n  }, null, 8 /* PROPS */, [\"products\", \"cartItems\", \"onAddToCart\", \"onRemoveFromCart\", \"onSubmitOrder\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","_component_TopNav","cartItemCount","$options","_component_router_view","products","$data","cartItems","onAddToCart","addToCart","onRemoveFromCart","removeFromCart","onSubmitOrder","submitOrder"],"sources":["/Users/fattehali/Desktop/BestBuy/store-front-L8/src/App.vue"],"sourcesContent":["<template>\n  <TopNav :cartItemCount=\"cartItemCount\"/>\n  <router-view\n    :products=\"products\"\n    :cartItems=\"cartItems\"\n    @addToCart=\"addToCart\"\n    @removeFromCart=\"removeFromCart\"\n    @submitOrder=\"submitOrder\"\n  ></router-view>\n</template>\n\n<script>\nimport TopNav from './components/TopNav.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    TopNav\n  },\n  data() {\n    return {\n      cartItems: [],\n      products: [],\n    }\n  },\n  computed: {\n    cartItemCount() {\n      return this.cartItems.reduce((total, item) => {\n        return total + item.quantity\n      }, 0)\n    }\n  },\n  mounted() {\n    this.getProducts()\n  },\n  methods: {\n    getProducts() {\n      fetch('/products')\n        .then(response => response.json())\n        .then(products => {\n          console.log('success getting proxy products')\n          this.products = products\n        })\n        .catch(error => {\n          console.log(error)\n          alert('Error occurred while fetching products')\n        })\n    },\n    addToCart({ productId, quantity }) {\n      // check if the product is already in the cart\n      const existingCartItem = this.cartItems.find(\n        item => item.product.id == productId\n      )\n      if (existingCartItem) {\n        // if it is, increment the quantity\n        existingCartItem.quantity += quantity\n      } else {\n        // if not, find the product, and add it with quantity to the cart\n        const product = this.products.find(product => product.id == productId)\n        this.cartItems.push({ product, quantity })\n      }\n    },\n    removeFromCart(index) {\n      this.cartItems.splice(index, 1)\n    },\n    submitOrder() {\n      // get the order-service URL from an environment variable\n      // const orderServiceUrl = process.env.VUE_APP_ORDER_SERVICE_URL;\n\n      // create an order object\n      const order = {\n        customerId: Math.floor(Math.random() * 10000000000).toString(),\n        items: this.cartItems.map(item => {\n          return {\n            productId: item.product.id,\n            quantity: item.quantity,\n            price: item.product.price\n          }\n        })\n      }\n\n      console.log(JSON.stringify(order));\n\n      // call the order-service using fetch\n      fetch(`/order`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(order)\n      })\n        .then(response => {\n          console.log(response)\n          if (!response.ok) {\n            alert('Error occurred while submitting order')\n          } else {\n            this.cartItems = []\n            alert('Order submitted successfully')\n          }\n        })\n        .catch(error => {\n          console.log(error)\n          alert('Error occurred while submitting order')\n        })\n    }\n  },\n}\n</script>\n\n<style>\nbody {\n  background-image: url('@/assets/algonquin.jpg');\n  background-size: cover;\n  background-position: center;\n  background-attachment: fixed; /* Keeps the background in place when scrolling */\n  margin: 0;\n  padding: 0;\n}\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 120px;\n}\n\nfooter {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: #0a5620;\n  color: #fff;\n  padding: 1rem;\n  margin: 0;\n}\n\nnav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\nul {\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\nli {\n  margin: 0 1rem;\n}\n\na {\n  color: #fff;\n  text-decoration: none;\n}\n\nbutton {\n  padding: 10px;\n  background-color: #005f8b;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  height: 42px;\n}\n\n.product-list {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n}\n\n.product-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  margin: 1rem;\n  padding: 1rem;\n  border: 1px solid #ccc;\n  border-radius: 0.5rem;\n  background-color: rgba(255, 255, 255, 0.9);\n}\n\n.product-card img {\n  max-width: 100%;\n  margin-bottom: 1rem;\n}\n\n.product-card a {\n  text-decoration: none;\n  color: #333;\n}\n\n.product-card h2 {\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n}\n\n.product-card p {\n  margin-bottom: 1rem;\n}\n\n.product-controls {\n  display: flex;\n  align-items: center;\n  margin-top: 0.5rem;\n}\n\n.product-controls p {\n  margin-right: 20px;\n}\n\n.product-controls button:hover {\n  background-color: #005f8b;\n}\n\n.product-price {\n  font-weight: bold;\n  font-size: 1.2rem;\n}\n\n.quantity-input {\n  width: 50px;\n  height: 30px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 5px;\n  margin-right: 10px;\n}\n\n.shopping-cart {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.9);\n}\n\n.shopping-cart h2 {\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\n.shopping-cart-table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.shopping-cart-table th,\n.shopping-cart-table td {\n  padding: 10px;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\n.shopping-cart-table th {\n  font-weight: bold;\n}\n\n.shopping-cart-table td img {\n  display: block;\n  margin: 0 auto;\n}\n\n.checkout-button {\n  margin-top: 20px;\n  padding: 10px 20px;\n  background-color: #007acc;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.checkout-button:hover {\n  background-color: #005f8b;\n}\n</style>\n"],"mappings":";;;;uBAAAA,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAAwCC,iBAAA;IAA/BC,aAAa,EAAEC,QAAA,CAAAD;EAAa,4CACrCF,YAAA,CAMeI,sBAAA;IALZC,QAAQ,EAAEC,KAAA,CAAAD,QAAQ;IAClBE,SAAS,EAAED,KAAA,CAAAC,SAAS;IACpBC,WAAS,EAAEL,QAAA,CAAAM,SAAS;IACpBC,gBAAc,EAAEP,QAAA,CAAAQ,cAAc;IAC9BC,aAAW,EAAET,QAAA,CAAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}